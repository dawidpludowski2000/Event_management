services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eventflow-backend
    env_file:
      - .env.prod

    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_started
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      sh -c "
        python -m pip install --upgrade pip &&
        pip install -r requirements.txt &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eventflow-frontend
    working_dir: /app
    environment:
      NEXT_PUBLIC_API_BASE_URL: "http://localhost:8000"
      NEXT_TELEMETRY_DISABLED: "1"
      NEXT_DISABLE_LIGHTNINGCSS: "1"
      TAILWIND_DISABLE_OXIDE: "1"
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./frontend:/app
      # osobny volume na node_modules, żeby mount kodu nie nadpisał instalacji
      - /app/node_modules
    command: >
      sh -c "rm -f package-lock.json &&
             npm install --package-lock-only &&
             npm ci --include=optional --no-audit --no-fund &&
             npm run dev -- -p 3000 -H 0.0.0.0"

  redis:
    image: redis:7-alpine
    container_name: eventflow-redis
    ports:
      - "6379:6379"
