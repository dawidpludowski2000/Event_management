 # --- Core ---
 DJANGO_SECRET_KEY=dev-insecure-key
 DEBUG=True
-ALLOWED_HOSTS=localhost,127.0.0.1
-CORS_ALLOWED_ORIGINS=http://localhost:3000
-CSRF_TRUSTED_ORIGINS=http://localhost:3000
+ALLOWED_HOSTS=localhost,127.0.0.1
+# W PROD ustaw prawdziwe hosty backendu, np.:
+# ALLOWED_HOSTS=api.example.com
+
+CORS_ALLOWED_ORIGINS=http://localhost:3000
+CSRF_TRUSTED_ORIGINS=http://localhost:3000
+# W PROD podaj pełne ORIGIN-y frontendu (z protokołem, bez / na końcu), np.:
+# CORS_ALLOWED_ORIGINS=https://app.example.com
+# CSRF_TRUSTED_ORIGINS=https://app.example.com

 # --- Database ---
 # W DEV można użyć SQLite (domyślnie)
 # W PROD użyj PostgreSQL
 DATABASE_URL=sqlite:///db.sqlite3
-# DATABASE_URL=postgresql://user:password@db:5432/eventflow
+# PRZYKŁAD PROD (docker compose postgres):
+# DATABASE_URL=postgresql://postgres:postgres@db:5432/eventflow

 # --- Redis ---
 REDIS_URL=redis://redis:6379/0

 # --- JWT ---
 ACCESS_TOKEN_LIFETIME_MINUTES=60
 REFRESH_TOKEN_LIFETIME_DAYS=7

 # --- Logging ---
 LOG_JSON=False

-# --- Request ID / Security ---
+# --- Request ID / Security ---
 ENABLE_SECURE_HEADERS=False
-SECURE_SSL_REDIRECT=True
+# Gdy uruchamiasz lokalnie „prod-like” bez TLS, możesz nadpisać na False w override compose:
+# SECURE_SSL_REDIRECT=True
 SESSION_COOKIE_SECURE=True
 CSRF_COOKIE_SECURE=True
 SECURE_HSTS_SECONDS=31536000
 SECURE_HSTS_INCLUDE_SUBDOMAINS=True
 SECURE_HSTS_PRELOAD=True
 SECURE_REFERRER_POLICY=strict-origin-when-cross-origin
 X_FRAME_OPTIONS=DENY
